import { client } from "./utils/client.ts";

async function createProgress(user_id: any) {
  const supabase = client();

  if (!user_id) {
    console.error("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω", user_id, "üéØ");
    return; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, –Ω–µ –ø—Ä–æ–¥–æ–ª–∂–∞—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è user_id –≤ —Ç–∞–±–ª–∏—Ü–µ javascript_progress
  const { data: progressData, error: progressError } = await supabase
    .from("javascript_progress")
    .select("*")
    .eq("user_id", user_id);

  if (progressError) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", progressError);
    return; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, –Ω–µ –ø—Ä–æ–¥–æ–ª–∂–∞—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
  }

  // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –Ω–µ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å
  if (progressData.length > 0) {
    console.log("–î–∞–Ω–Ω—ã–µ –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç");
    return; // –î–∞–Ω–Ω—ã–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏
  }

  // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å, –µ—Å–ª–∏ –æ–Ω–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
  const { error: insertError } = await supabase
    .from("javascript_progress")
    .insert([{
      user_id: user_id, /* –¥—Ä—É–≥–∏–µ –ø–æ–ª—è, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å */
    }]);

  if (insertError) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", insertError);
    return; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, –Ω–µ –ø—Ä–æ–¥–æ–ª–∂–∞—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
  }
}

export { createProgress };
